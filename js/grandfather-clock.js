class GrandfatherClockSystem{constructor(){this.isActive=!1,this.tickInterval=null,this.currentBeat=0,this.currentTempo=60,this.masterGain=null,this.reverb=null,this.noiseSource=null,this.woodOsc=null,this.tickOsc=null,this.noiseEnv=null,this.woodEnv=null,this.tickEnv=null,this.brightnessFilter=null,this.resonantFilter=null,this.mechanicalFilter=null,this.mixer=null}async init(){console.log("üï∞Ô∏è Initializing grandfather clock system...");try{"running"!==Tone.context.state&&(console.log("üï∞Ô∏è Starting Tone.js context..."),await Tone.start());const e=document.getElementById("clock-tempo"),t=document.getElementById("clock-volume"),s=document.getElementById("clock-brightness"),i=document.getElementById("clock-resonance"),n=document.getElementById("clock-reverb"),o=document.getElementById("clock-decay");this.currentTempo=e?parseInt(e.value):60;const c=t?parseInt(t.value):-6;console.log(`üï∞Ô∏è Clock settings: Tempo=${this.currentTempo}, Volume=${c}dB`),this.masterGain=new Tone.Gain(Tone.dbToGain(c)),console.log("üï∞Ô∏è Created master gain:",Tone.dbToGain(c));const l=o?parseInt(o.value):25,r=n?parseFloat(n.value):.8;this.reverb=new Tone.Reverb({decay:l,wet:r,preDelay:.1}),console.log(`üï∞Ô∏è Created reverb: decay=${l}s, wet=${r}`),this.noiseSource=new Tone.Noise("white");const a=new Tone.Gain(.8);this.noiseEnv=new Tone.AmplitudeEnvelope({attack:.001,decay:.02,sustain:0,release:.01}),this.woodOsc=new Tone.Oscillator(150,"triangle");const h=new Tone.Gain(.3);this.woodEnv=new Tone.AmplitudeEnvelope({attack:.001,decay:.1,sustain:0,release:.05}),this.tickOsc=new Tone.Oscillator(2e3,"square");const d=new Tone.Gain(.4);this.tickEnv=new Tone.AmplitudeEnvelope({attack:.001,decay:.01,sustain:0,release:.01}),console.log("üï∞Ô∏è Created sound sources"),this.brightnessFilter=new Tone.Filter({frequency:s?parseInt(s.value):2e3,type:"lowpass",Q:2}),this.resonantFilter=new Tone.Filter({frequency:300,type:"bandpass",Q:i?parseFloat(i.value):8}),this.mechanicalFilter=new Tone.Filter({frequency:1200,type:"highpass",Q:1}),console.log("üï∞Ô∏è Created filters"),this.noiseSource.connect(a),a.connect(this.noiseEnv),this.noiseEnv.connect(this.mechanicalFilter),this.woodOsc.connect(h),h.connect(this.woodEnv),this.woodEnv.connect(this.resonantFilter),this.tickOsc.connect(d),d.connect(this.tickEnv),this.tickEnv.connect(this.brightnessFilter),this.mixer=new Tone.Gain(1),this.mechanicalFilter.connect(this.mixer),this.resonantFilter.connect(this.mixer),this.brightnessFilter.connect(this.mixer),console.log("üï∞Ô∏è Connected signal chain"),this.mixer.connect(this.masterGain),this.masterGain.connect(this.reverb),"undefined"!=typeof masterVolume&&masterVolume?(console.log("üï∞Ô∏è Connecting to global masterVolume"),this.reverb.connect(masterVolume)):(console.log("üï∞Ô∏è Connecting directly to destination"),this.reverb.toDestination()),this.noiseSource.start(),this.woodOsc.start(),this.tickOsc.start(),console.log("üï∞Ô∏è Started oscillators - clock system ready!")}catch(e){throw console.error("üï∞Ô∏è Error initializing clock system:",e),e}}start(){console.log("üï∞Ô∏è Starting clock ticking..."),this.isActive?console.log("üï∞Ô∏è Clock already active"):(this.isActive=!0,this.startTicking())}stop(){console.log("üï∞Ô∏è Stopping clock..."),this.isActive&&(this.isActive=!1,this.tickInterval&&(clearTimeout(this.tickInterval),this.tickInterval=null))}dispose(){console.log("üï∞Ô∏è Disposing clock system..."),this.stop(),this.noiseSource&&(this.noiseSource.stop(),this.noiseSource.dispose()),this.woodOsc&&(this.woodOsc.stop(),this.woodOsc.dispose()),this.tickOsc&&(this.tickOsc.stop(),this.tickOsc.dispose()),[this.noiseEnv,this.woodEnv,this.tickEnv,this.brightnessFilter,this.resonantFilter,this.mechanicalFilter,this.mixer,this.masterGain,this.reverb].forEach(e=>{if(e&&e.dispose)try{e.dispose()}catch(e){console.debug("Error disposing clock node:",e)}})}startTicking(){if(!this.isActive)return;const e=()=>{if(!this.isActive)return;this.triggerTick(),this.currentBeat++;const t=60/this.currentTempo*1e3;this.isActive&&(this.tickInterval=setTimeout(e,t))};setTimeout(e,100)}triggerTick(){try{if(this.noiseEnv.triggerAttackRelease("8n"),this.woodEnv.triggerAttackRelease("4n"),this.tickEnv.triggerAttackRelease("32n"),"undefined"!=typeof activeNotes){const e="CLOCK_TICK";activeNotes[e]?activeNotes[e].count++:activeNotes[e]={count:1,type:"clock"},setTimeout(()=>{"undefined"!=typeof activeNotes&&activeNotes[e]&&(activeNotes[e].count--,activeNotes[e].count<=0&&delete activeNotes[e])},100)}}catch(e){console.error("üï∞Ô∏è Clock tick error:",e)}}updateTempo(e){console.log(`üï∞Ô∏è Updating tempo to ${e} BPM`),this.currentTempo=Math.max(30,Math.min(120,e)),this.isActive&&(this.stop(),this.start())}updateVolume(){const e=document.getElementById("clock-volume");if(this.masterGain&&e){const t=parseInt(e.value),s=Tone.dbToGain(t);console.log(`üï∞Ô∏è Updating volume to ${t}dB (gain: ${s})`),this.masterGain.gain.rampTo(s,.1)}}updateBrightness(){const e=document.getElementById("clock-brightness");if(this.brightnessFilter&&e){const t=parseInt(e.value);console.log(`üï∞Ô∏è Updating brightness to ${t}Hz`),this.brightnessFilter.frequency.rampTo(t,.5)}}updateResonance(){const e=document.getElementById("clock-resonance");if(this.resonantFilter&&e){const t=parseFloat(e.value);console.log(`üï∞Ô∏è Updating resonance to Q=${t}`),this.resonantFilter.Q.rampTo(t,.5)}}updateReverb(){const e=document.getElementById("clock-reverb");if(this.reverb&&e){const t=parseFloat(e.value);console.log(`üï∞Ô∏è Updating reverb to ${t}`),this.reverb.wet.rampTo(t,.5)}}getCurrentTempo(){return this.currentTempo}getCurrentBeat(){return this.currentBeat}getTickInfo(){return this.isActive?`Ticking at ${this.currentTempo} BPM`:"Stopped"}}class GrandfatherClockManager{constructor(){this.clockSystem=null,this.isInitialized=!1}async initialize(){if(console.log("üï∞Ô∏è Initializing clock manager..."),this.isInitialized)console.log("üï∞Ô∏è Clock manager already initialized");else try{this.clockSystem=new GrandfatherClockSystem,await this.clockSystem.init(),this.isInitialized=!0,console.log("üï∞Ô∏è Clock manager initialized successfully"),this.setupEventListeners()}catch(e){throw console.error("üï∞Ô∏è Failed to initialize clock manager:",e),e}}setupEventListeners(){console.log("üï∞Ô∏è Setting up event listeners...");document.querySelector('.ambient-toggle[data-sound="clock"]');const e=document.getElementById("clock-tempo"),t=document.getElementById("clock-volume"),s=document.getElementById("clock-brightness"),i=document.getElementById("clock-resonance"),n=document.getElementById("clock-reverb"),o=document.getElementById("clock-decay");e&&e.addEventListener("input",()=>{const t=parseInt(e.value);console.log(`üï∞Ô∏è Tempo slider changed to ${t}`),this.clockSystem&&this.clockSystem.updateTempo(t)}),t&&t.addEventListener("input",()=>this.updateVolume()),s&&s.addEventListener("input",()=>this.updateBrightness()),i&&i.addEventListener("input",()=>this.updateResonance()),n&&n.addEventListener("input",()=>this.updateReverb()),o&&o.addEventListener("input",()=>this.updateDecaySettings())}async toggle(){console.log("üï∞Ô∏è Toggle called...");try{this.isInitialized||(console.log("üï∞Ô∏è Initializing on first toggle..."),await this.initialize());const e=document.querySelector('.ambient-toggle[data-sound="clock"]');e&&(e.classList.contains("active")?this.clockSystem.isActive||(console.log("üï∞Ô∏è Starting clock..."),this.clockSystem.start()):this.clockSystem.isActive&&(console.log("üï∞Ô∏è Stopping clock..."),this.clockSystem.stop())),this.updateStatus()}catch(e){console.error("üï∞Ô∏è Error in toggle:",e)}}updateVolume(){this.clockSystem&&this.clockSystem.updateVolume()}updateBrightness(){this.clockSystem&&this.clockSystem.updateBrightness()}updateResonance(){this.clockSystem&&this.clockSystem.updateResonance()}updateReverb(){this.clockSystem&&this.clockSystem.updateReverb()}updateDecaySettings(){console.log("üï∞Ô∏è Clock decay settings updated - will apply on next start")}updateStatus(){}isActive(){return!!this.clockSystem&&this.clockSystem.isActive}getCurrentTempo(){return this.clockSystem?this.clockSystem.getCurrentTempo():60}getTickInfo(){return this.clockSystem?this.clockSystem.getTickInfo():"Not initialized"}dispose(){this.clockSystem&&(this.clockSystem.dispose(),this.clockSystem=null),this.isInitialized=!1}}console.log("üï∞Ô∏è Debug version loaded. Run testClock() in console to test independently.");